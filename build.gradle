plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
	mavenLocal()
    mavenCentral()
	maven { url = 'https://aperlambda.github.io/maven' }
	maven { url = "https://jitpack.io" }
	maven {
		name = 'CottonMC'
		url = 'http://server.bbkr.space:8081/artifactory/libs-snapshot'
	}
}

dependencies {
	// Minecraft and Fabric.
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modCompile "io.github.cottonmc:cotton-client-commands:0.4.2+1.14.3-SNAPSHOT"

	modCompile "io.github.prospector:modmenu:${project.modmenu_version}"
	modCompile "com.github.lambdaurora:spruceui:${project.spruceui_version}"
	include "com.github.lambdaurora:spruceui:${project.spruceui_version}"

	implementation "org.jetbrains:annotations:17.0.0"
	implementation "org.aperlambda:lambdajcommon:1.8.0"
	implementation "com.electronwill.night-config:core:3.5.3"
	implementation "com.electronwill.night-config:toml:3.5.3"
	include "org.jetbrains:annotations:17.0.0"
	include "org.aperlambda:lambdajcommon:1.8.0"
	include "com.electronwill.night-config:core:3.5.3"
	include "com.electronwill.night-config:toml:3.5.3"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		mavenLocal()
	}
}
